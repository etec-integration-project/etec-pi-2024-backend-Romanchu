version: '3.8'

services:

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - 3307:3306  # Puedes cambiar esto si el puerto ya está en uso
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      TZ: America/Argentina/Mendoza
    networks:
      - express-app

  backend:
    build:
      context: https://github.com/etec-integration-project/etec-pi-2024-backend-Romanchu.git  # Cambia la URL para apuntar a la carpeta local del backend
    container_name: backend
    restart: always
    environment:
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306  # Este es el puerto por defecto de MySQL
    depends_on:
      - mysql
    networks:
      - express-app

  frontend:
    build:
      context: https://github.com/etec-integration-project/etec-pi-2024-frontend-Romanchu.git  # Cambia la URL para apuntar a la carpeta local del frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    environment:
      REACT_APP_API_URL: http://backend:${PORT}
    networks:
      - express-app

  nginx:
    build:
      context: https://github.com/etec-integration-project/etec-pi-2024-proxy-Romanchu.git  # Cambia la URL para apuntar a la carpeta local del proxy Nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "8081:80"  # Expón el puerto 80 de Nginx en el 8081 de tu máquina
    depends_on:
      - frontend
      - backend
    restart: always
    networks:
      - express-app

networks:
  express-app:
    driver: bridge
